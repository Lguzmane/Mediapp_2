# Generated by Django 5.2 on 2025-08-06 23:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre de la Especialidad')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name_plural': 'Especialidades',
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('años_experiencia', models.PositiveIntegerField(default=0, verbose_name='Años de Experiencia')),
                ('registro_medico', models.CharField(max_length=50, verbose_name='Registro Médico')),
                ('especialidad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mediapp.especialidad', verbose_name='Especialidad')),
            ],
        ),
        migrations.CreateModel(
            name='BloqueoAgenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(verbose_name='Fecha/Hora de Inicio')),
                ('fecha_fin', models.DateTimeField(verbose_name='Fecha/Hora de Fin')),
                ('motivo', models.CharField(max_length=255, verbose_name='Motivo del Bloqueo')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloqueos', to='Mediapp.medico')),
            ],
        ),
        migrations.CreateModel(
            name='AgendaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('lunes', 'Lunes'), ('martes', 'Martes'), ('miércoles', 'Miércoles'), ('jueves', 'Jueves'), ('viernes', 'Viernes')], max_length=10, verbose_name='Día de la Semana')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora de Fin')),
                ('duracion_cita', models.PositiveIntegerField(default=30, verbose_name='Duración de Cita (min)')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agenda', to='Mediapp.medico')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut', models.CharField(max_length=12, unique=True, verbose_name='RUT')),
                ('tipo_usuario', models.CharField(choices=[('paciente', 'Paciente'), ('medico', 'Médico'), ('admin', 'Administrador')], default='paciente', max_length=10)),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('direccion', models.TextField(blank=True, verbose_name='Dirección')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('genero', models.CharField(blank=True, choices=[('masculino', 'Masculino'), ('femenino', 'Femenino'), ('otro', 'Otro'), ('prefiero_no_decir', 'Prefiero no decir')], max_length=17, verbose_name='Género')),
                ('nacionalidad', models.CharField(blank=True, max_length=50, verbose_name='Nacionalidad')),
                ('grupo_sanguineo', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, verbose_name='Grupo Sanguíneo')),
                ('alergias', models.TextField(blank=True, verbose_name='Alergias conocidas')),
                ('condiciones_medicas', models.TextField(blank=True, verbose_name='Condiciones médicas preexistentes')),
                ('medicamentos', models.TextField(blank=True, verbose_name='Medicamentos actuales')),
                ('cirugias_previas', models.TextField(blank=True, verbose_name='Cirugías previas')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='medico',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_medico', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha de la Cita')),
                ('hora', models.TimeField(verbose_name='Hora de la Cita')),
                ('estado', models.CharField(choices=[('agendada', 'Agendada'), ('cancelada', 'Cancelada'), ('completada', 'Completada')], default='agendada', max_length=20)),
                ('motivo_cancelacion', models.TextField(blank=True, null=True, verbose_name='Motivo de Cancelación')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('especialidad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mediapp.especialidad', verbose_name='Especialidad')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas_medico', to='Mediapp.medico')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas_paciente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
